name: Deploy to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: vercel-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel env (preview)
        run: vercel pull --yes --environment=preview --token=${VERCEL_TOKEN}

      - name: Build (preview)
        run: vercel build --token=${VERCEL_TOKEN}

      - name: Deploy (preview, prebuilt)
        id: deploy
        run: |
          url=$(vercel deploy --prebuilt --token=${VERCEL_TOKEN})
          echo "url=$url" >> $GITHUB_OUTPUT

      - name: Post preview URL to PR
        if: github.event.pull_request.number
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            Preview deployed: ${{ steps.deploy.outputs.url }}

  deploy-production:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel env (production)
        run: vercel pull --yes --environment=production --token=${VERCEL_TOKEN}

      - name: Build (production)
        run: vercel build --prod --token=${VERCEL_TOKEN}

      - name: Deploy (production, prebuilt)
        id: deploy
        run: |
          url=$(vercel deploy --prebuilt --prod --token=${VERCEL_TOKEN})
          echo "url=$url" >> $GITHUB_OUTPUT

      - name: Echo production URL
        run: echo "Production deployed: ${{ steps.deploy.outputs.url }}"
